= form_for @lesson, remote: true, html: { class: "form-horizontal" } do |f|
	.col-sm-8.col-md-7.col-lg-6
		.form-group
			= f.label "Date", class: "col-md-3 control-label"
			.input-group.col-md-4
				%input#lesson_beginning.form-control{ type: 'text',
		    	name: 'lesson[beginning]',
		    	value: display_datetime(@lesson.beginning),
		    	data: { format: 'yyyy-MM-dd hh:mm' }}
			.input-group.col-md-4
				%input#lesson_ending.form-control{ type: 'text',
		    	name: 'lesson[ending]',
		    	value: display_datetime(@lesson.ending),
		    	data: { format: 'yyyy-MM-dd hh:mm' }}

		.form-group
			= f.label :teacher, class: "col-md-3 control-label"
			.col-md-9
				= f.collection_select :teacher_id, Group.teacher.users, :id, :nickname, { prompt: false }, { class: "form-control" }

		.form-group
			= f.label :students, class: "col-md-3 control-label"
			.col-md-9
				= f.collection_select :student_ids, Group.student_users(current_user), :id, :nickname, {}, { class: "form-control", multiple: false }

		- if is_admin? or is_teacher?
			= text_control_group(f, 'payment')
		- else
			= text_control_group(f, 'payment', { disabled: "disabled" })
		= textarea_control_group(f, 'content', { rows: 3 })

		.form-group
			.col-md-offset-3.col-md-9.form-footer
				= f.submit @lesson.new_record? ? "Create" : "Edit", class: "btn btn-success"
				- if !@lesson.new_record?
					= link_to "Destroy", lesson_path(@lesson), class: "btn btn-danger", remote: true, method: :delete

.clearfix.text-center
	- @lesson.songs.each do |song|
		= raw song.youtube_embed

#mediaContainer

:javascript
	$(document).ready(function() {
		$('#lesson_beginning, #lesson_ending').datetimepicker({
			format: 'Y-m-d H:i',
			mask: true
		});

		var displayMedia = {
			media: [],
			detection: function () {
				var str = $('#lesson_content').val();
				var patt1 = /https?:\/\/[^\s]+\.(jpg|png|bmp|mp3|ogg)/img;
				var result = str.match(patt1);
				var $container = $('#mediaContainer');
				if (result && result.length) {
					for (var i = 0; i < result.length; i++) {
						var exist = false;
						for (var j = 0; j < this.media.length; j++) {
							if (this.media[j].url === result[i]) {
								exist = true;
								break;
							}
						}
						if (!exist) {
							this.addMedia(result[i]);
						}
					}

					for (var i = this.media.length - 1; i >= 0; i--) {
						var exist = false;
						for (var j = 0; j < result.length; j++) {
							if (this.media[i].url === result[j]) {
								exist = true;
								break;
							}
						}
						if (!exist) {
							this.removeMedia(i);
						}
					}
				}
				else {
					this.media.splice(0, this.media.length);
					$container.empty();
				}
			},
			addMedia: function (url) {
				var $container = $('#mediaContainer'),
					$media;
				var pattMp3 = /mp3$/,
					pattOgg = /ogg$/,
					pattImg = /(jpg|png|bmp)$/;
				if (url.match(pattMp3) || url.match(pattOgg)) {
					$media = $('<div class="well text-center">' +
							'<audio controls>' +
								'<source src="' + url +'" type="audio/mpeg">' +
								'<source src="' + url +'" type="audio/ogg">' +
								'<embed height="50" width="100" src="' + url +'">' +
							'</audio>' +
						'</div>')
				}
				else if (url.match(pattImg)) {
					$media = $('<img src="' + url + '" />');
				}
				else {
					return;
				}

				$container.append($media);
				this.media.push({
					url: url,
					$media: $media
				});
			},
			removeMedia: function (index) {
				this.media[index].$media.remove();
				this.media.splice(index, 1);
			}
		};

		$('#lesson_content').keyup(function (event) {
			displayMedia.detection();
		});

		displayMedia.detection();
	});